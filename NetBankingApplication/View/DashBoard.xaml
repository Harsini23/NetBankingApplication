<Page
    x:Class="NetBankingApplication.View.DashBoard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NetBankingApplication.View"
    xmlns:componentmodules="using:NetBankingApplication.View.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="Page_Loaded"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///ResourceDictionaries/StyleDictionary"></ResourceDictionary>
                <ResourceDictionary Source="ms-appx:///ResourceDictionaries/DataTemplateModules"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <!--<Style TargetType="NavigationViewItemHeader">
                <Setter Property="Margin" Value="100,0,0,0"></Setter>
            </Style>-->

            <!--<Style x:Key="CustomPaneToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Content">
                    <Setter.Value>
                        <SymbolIcon Symbol="Edit" />
                      
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!--<Style x:Key="PaneToggleButtonStyle" TargetType="Button">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
                <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
                <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
                <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                        x:Name="LayoutRoot"
                        MinWidth="{TemplateBinding MinWidth}"
                        Height="{TemplateBinding MinHeight}"
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="Stretch">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{ThemeResource PaneToggleButtonWidth}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
                                </Grid.RowDefinitions>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="AdaptiveDisableGroup">
                                        <VisualState x:Name="WideState">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="600" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.IsEnabled" Value="False" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="NarrowState">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0" />
                                                <AdaptiveTrigger MinWindowWidth="599" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.IsEnabled" Value="True" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                    

                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundChecked}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                      
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Viewbox
                            x:Name="IconHost"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw">

                                    <TextBlock
                                x:Name="Icon"
                                Text="&#xE825;"
                                FontSize="{TemplateBinding FontSize}"
                                AutomationProperties.AccessibilityView="Raw"/>

                                </Viewbox>

                                <ContentPresenter
                            x:Name="ContentPresenter"
                            VerticalContentAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontSize="{TemplateBinding FontSize}"
                            Grid.Column="1"
                            AutomationProperties.AccessibilityView="Raw"/>

                                <Border
                            x:Name="RevealBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Grid.ColumnSpan="2"/>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <Style TargetType="NavigationView">
                <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="NavigationView">
                            <Grid x:Name="RootGrid">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="DisplayModeGroup">
                                        <VisualState x:Name="Compact" />

                                        <VisualState x:Name="Expanded">
                                            <VisualState.Setters>
                                                <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource NavigationViewExpandedPaneBackground}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Minimal">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContent.Margin" Value="48,5,0,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="TopNavigationMinimal" />
                                        <VisualState x:Name="MinimalWithBackButton">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContent.Margin" Value="104,5,0,0" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TogglePaneGroup">
                                        <VisualState x:Name="TogglePaneButtonVisible" />
                                        <VisualState x:Name="TogglePaneButtonCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="PaneContentGridToggleButtonRow.Height" Value="4" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="HeaderGroup">
                                        <VisualState x:Name="HeaderVisible" />
                                        <VisualState x:Name="HeaderCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="SettingsGroup">
                                        <VisualState x:Name="SettingsVisible" />
                                        <VisualState x:Name="SettingsCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="SettingsNavPaneItem.Visibility" Value="Collapsed" />
                                                <Setter Target="SettingsTopNavPaneItem.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="AutoSuggestGroup">
                                        <VisualState x:Name="AutoSuggestBoxVisible" />
                                        <VisualState x:Name="AutoSuggestBoxCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                                                <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="PaneStateGroup">
                                        <VisualState x:Name="NotClosedCompact" />
                                        <VisualState x:Name="ClosedCompact">
                                            <VisualState.Setters>
                                                <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed" />
                                                <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                        <VisualState x:Name="ListSizeFull" />
                                        <VisualState x:Name="ListSizeCompact">
                                            <VisualState.Setters>
                                                <Setter Target="MenuItemsHost.HorizontalAlignment" Value="Left" />
                                                <!-- This is essentially a TemplateBinding: -->
                                                <Setter Target="MenuItemsHost.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                                <Setter Target="SettingsNavPaneItem.HorizontalAlignment" Value="Left" />
                                                <Setter Target="SettingsNavPaneItem.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                                <Setter Target="PaneTitleTextBlock.Visibility" Value="Visible" />
                                                <Setter Target="PaneHeaderContentBorder.Visibility" Value="Visible" />
                                                <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left" />
                                                <Setter Target="PaneCustomContentBorder.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                                <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left" />
                                                <Setter Target="FooterContentBorder.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                        <VisualState x:Name="TitleBarVisible" />
                                        <VisualState x:Name="TitleBarCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="OverflowLabelGroup">
                                        <VisualState x:Name="OverflowButtonWithLabel" />
                                        <VisualState x:Name="OverflowButtonNoLabel">
                                            <VisualState.Setters>
                                                <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="BackButtonGroup">
                                        <VisualState x:Name="BackButtonVisible" />
                                        <VisualState x:Name="BackButtonCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid
                            x:Name="PaneToggleButtonGrid"
                            Margin="0,0,0,8"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Canvas.ZIndex="100">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Grid x:Name="TogglePaneTopPadding"
                                  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                    <Grid x:Name="ButtonHolderGrid" Grid.Row="1">
                                        <Button 
                                    x:Name="NavigationViewBackButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    VerticalAlignment="Top"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                    IsEnabled="{TemplateBinding IsBackEnabled}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip x:Name="NavigationViewBackButtonToolTip" />
                                            </ToolTipService.ToolTip>
                                        </Button>
                                        <Button
                                    x:Name="TogglePaneButton"
                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                    AutomationProperties.LandmarkType="Navigation"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                    VerticalAlignment="Top">
                                            <TextBlock
                                        x:Name="PaneTitleTextBlock" 
                                        Grid.Column="0"
                                        Text="{TemplateBinding PaneTitle}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource NavigationViewItemHeaderTextStyle}"/>
                                        </Button>
                                    </Grid>

                                </Grid>

                                <Grid>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <StackPanel x:Name="TopNavArea" Background="{ThemeResource NavigationViewTopPaneBackground}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Canvas.ZIndex="1" XYFocusKeyboardNavigation="Enabled">

                                        <Grid x:Name="TopNavTopPadding"
                                      Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"/>

                                        <Grid x:Name="TopNavGrid" 
                                      Height="{ThemeResource NavigationViewTopPaneHeight}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" MinWidth="48" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Grid 
                                        x:Name="TopNavLeftPadding" 
                                        Grid.Column="1"
                                        Width="0"/>

                                            <ContentControl
                                        x:Name="PaneHeaderOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="2"/>

                                            <!-- Top nav list -->
                                            <NavigationViewList AutomationProperties.LandmarkType="Navigation" x:Name="TopNavMenuItemsHost" Grid.Column="3" SelectionMode="Single" IsItemClickEnabled="True" ItemTemplate="{TemplateBinding MenuItemTemplate}" ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}" ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}" ScrollViewer.HorizontalScrollMode="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" SingleSelectionFollowsFocus="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SingleSelectionFollowsFocus}">
                                                <ListView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <ItemsStackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ListView.ItemsPanel>
                                                <ListView.ItemContainerTransitions>
                                                    <TransitionCollection />
                                                </ListView.ItemContainerTransitions>
                                            </NavigationViewList>

                                            <Button 
                                        x:Name="TopNavOverflowButton"
                                        Grid.Column="4"

                                        Content="More"
                                        Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                                <Button.Flyout>
                                                    <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                                                        <Flyout.FlyoutPresenterStyle>
                                                            <Style TargetType="FlyoutPresenter">
                                                                <Setter Property="Padding" Value="0,8" />
                                                                <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                                <Setter Property="Margin" Value="0,-4,0,0" />
                                                            </Style>
                                                        </Flyout.FlyoutPresenterStyle>
                                                        <NavigationViewList x:Name="TopNavMenuItemsOverflowHost" ItemTemplate="{TemplateBinding MenuItemTemplate}" ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}" ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}" SingleSelectionFollowsFocus="False" IsItemClickEnabled="True">
                                                            <ListView.ItemContainerTransitions>
                                                                <TransitionCollection />
                                                            </ListView.ItemContainerTransitions>
                                                        </NavigationViewList>
                                                    </Flyout>
                                                </Button.Flyout>
                                            </Button>

                                            <ContentControl
                                        x:Name="PaneCustomContentOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="5"/>

                                            <Grid
                                        x:Name="TopPaneAutoSuggestArea"
                                        Height="{ThemeResource NavigationViewTopPaneHeight}"
                                        Grid.Column="6">

                                                <ContentControl
                                            x:Name="TopPaneAutoSuggestBoxPresenter"
                                            Margin="12,0,12,0"
                                            MinWidth="48"
                                            IsTabStop="False"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center"/>
                                            </Grid>

                                            <ContentControl
                                        x:Name="PaneFooterOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="7" />
                                            <NavigationViewItem x:Name="SettingsTopNavPaneItem" Style="{ThemeResource NavigationViewSettingsItemStyleWhenOnTopPane}" Grid.Column="8" Icon="Setting" />

                                        </Grid>
                                        <Border
                                    x:Name="TopNavContentOverlayAreaGrid"
                                    Child="{TemplateBinding ContentOverlay}" />
                                    </StackPanel>

                                    <SplitView
                                x:Name="RootSplitView"
                                Background="{TemplateBinding Background}"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                DisplayMode="Inline"
                                IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                IsTabStop="False"
                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                PaneBackground="{ThemeResource NavigationViewDefaultPaneBackground}"
                            
                                Grid.Row="1">

                                        <SplitView.Pane>
                                            <Grid 
                                        x:Name="PaneContentGrid"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="0" />
                                                    <!-- above button margin + back button space -->
                                                    <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="8" />
                                                    <!-- above list margin -->
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="8" />
                                                </Grid.RowDefinitions>

                                                <Grid x:Name="ContentPaneTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                                <Grid Grid.Row="2" Height="{StaticResource PaneToggleButtonHeight}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{ThemeResource PaneToggleButtonWidth}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>

                                                    <ContentControl
                                                x:Name="PaneHeaderContentBorder"
                                                IsTabStop="False"
                                                VerticalContentAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                Grid.Column="1" />
                                                </Grid>

                                                <Grid
                                            x:Name="AutoSuggestArea"
                                            Grid.Row="3"
                                            Height="{ThemeResource NavigationViewTopPaneHeight}"
                                            VerticalAlignment="Center">

                                                    <ContentControl
                                                x:Name="PaneAutoSuggestBoxPresenter"
                                                Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
                                                IsTabStop="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Center"/>

                                                    <Button
                                                x:Name="PaneAutoSuggestButton"
                                                Visibility="Collapsed"
                                                Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
                                                Width="{TemplateBinding CompactPaneLength}"/>
                                                </Grid>

                                                <ContentControl
                                            x:Name="PaneCustomContentBorder"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Row="4" />

                                                <!-- Left nav list -->
                                                <NavigationViewList x:Name="MenuItemsHost" Grid.Row="6" Margin="0,0,0,20" SelectionMode="Single" IsItemClickEnabled="True" HorizontalAlignment="Stretch" SelectedItem="{TemplateBinding SelectedItem}" ItemTemplate="{TemplateBinding MenuItemTemplate}" ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}" ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}" SingleSelectionFollowsFocus="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SingleSelectionFollowsFocus}" />

                                                <ContentControl
                                            x:Name="FooterContentBorder"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Row="7" />
                                                <NavigationViewItem x:Name="SettingsNavPaneItem" Grid.Row="8" Icon="Setting" />
                                            </Grid>
                                        </SplitView.Pane>

                                        <SplitView.Content>
                                            <Grid x:Name="ContentGrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>

                                                <Grid x:Name="ContentTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"/>

                                                <ContentControl
                                            x:Name="HeaderContent"
                                            Grid.Row="1"
                                            MinHeight="{StaticResource PaneToggleButtonHeight}"
                                            IsTabStop="False"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"/>

                                                <ContentPresenter
                                            AutomationProperties.LandmarkType="Main"
                                            Grid.Row="2"
                                            Content="{TemplateBinding Content}"/>
                                            </Grid>
                                        </SplitView.Content>
                                    </SplitView>

                                </Grid>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="NavigationViewItem">
                <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
                <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
                <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="NavigationViewItem">
                            <NavigationViewItemPresenter x:Name="NavigationViewItemPresenter" Icon="{TemplateBinding Icon}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Content="{TemplateBinding Content}" IsTabStop="False">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                        <VisualState x:Name="OnLeftNavigation">
                                            <VisualState.Setters>
                                                <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OnLeftNavigationReveal">
                                            <VisualState.Setters>
                                                <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OnTopNavigationPrimary">
                                            <VisualState.Setters>
                                                <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OnTopNavigationPrimaryReveal">
                                            <VisualState.Setters>
                                                <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OnTopNavigationOverflow">
                                            <VisualState.Setters>
                                                <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </NavigationViewItemPresenter>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="NavigationViewItemHeader">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="NavigationViewItemHeader">
                            <Grid>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="PaneStates">

                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="HeaderTextCollapsed" To="HeaderTextVisible">

                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="40" />
                                                    </ObjectAnimationUsingKeyFrames>

                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>

                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0" />
                                                        <SplineDoubleKeyFrame
                                                KeyTime="0:0:0.2"
                                                KeySpline="0.0,0.35 0.15,1.0"
                                                Value="1.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>

                                            <VisualTransition From="HeaderTextVisible" To="HeaderTextCollapsed">

                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="20" />
                                                    </ObjectAnimationUsingKeyFrames>

                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>

                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                        <SplineDoubleKeyFrame
                                                KeyTime="0:0:0.1"
                                                KeySpline="0.0,0.35 0.15,1.0"
                                                Value="0.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="HeaderTextVisible" />
                                        <VisualState x:Name="HeaderTextCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderText.Visibility" Value="Collapsed" />
                                                <Setter Target="InnerHeaderGrid.Height" Value="20" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="InnerHeaderGrid" Height="40" HorizontalAlignment="Left" Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}">
                                    <TextBlock
                            x:Name="HeaderText"
                            VerticalAlignment="Center"
                            Margin="0,-1,0,-1"
                            Style="{StaticResource NavigationViewItemHeaderTextStyle}"
                            Text="{TemplateBinding Content}"
                            TextWrapping="NoWrap"/>

                                </Grid>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="NavigationViewItemSeparator">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                                        <VisualState x:Name="HorizontalLine" />
                                        <VisualState x:Name="VerticalLine">
                                            <VisualState.Setters>
                                                <Setter Target="SeparatorLine.Height" Value="20" />
                                                <Setter Target="SeparatorLine.Width" Value="1" />
                                                <Setter Target="SeparatorLine.Margin" Value="10,0" />
                                                <Setter Target="SeparatorLine.VerticalAlignment" Value="Center" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                                <Rectangle 
                            x:Name="SeparatorLine"
                            Height="1"
                            Margin="16,10"
                            Fill="{ThemeResource SystemControlForegroundBaseLowBrush}" />

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="NavigationViewItemPresenter" x:Key="NavigationViewItemPresenterStyleWhenOnLeftPane">
                <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
                <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
                <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="NavigationViewItemPresenter">
                            <Grid
                        x:Name="LayoutRoot"
                        Height="40"
                        Background="{TemplateBinding Background}"
                        Control.IsTemplateFocusTarget="True">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="PointerStates">
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                                <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                                <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                                <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelected}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                                <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelectedPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                                <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelectedPressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushCheckedDisabled}" />
                                                <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="IconStates">
                                        <VisualState x:Name="IconVisible" />
                                        <VisualState x:Name="IconCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                                <Setter Target="IconColumn.Width" Value="16" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                                <Grid
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">

                                    <Rectangle
                                x:Name="SelectionIndicator"
                                Width="2"
                                Height="24"
                                Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                Opacity="0.0"/>

                                </Grid>

                                <Border
                            x:Name="RevealBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                                <Grid Height="40" HorizontalAlignment="Left" x:Name="ContentGrid">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="48" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Viewbox x:Name="IconBox"                                
                                Margin="{ThemeResource NavigationViewItemIconBoxMargin}">
                                        <ContentPresenter 
                                    x:Name="Icon" 
                                    Content="{TemplateBinding Icon}" />
                                    </Viewbox>

                                    <ContentPresenter x:Name="ContentPresenter"
                                Grid.Column="1"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Margin="{TemplateBinding Padding}"
                                AutomationProperties.AccessibilityView="Raw"/>

                                </Grid>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="NavigationViewItemPresenter" x:Key="NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus">
                <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
                <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
                <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="NavigationViewItemPresenter">
                            <Grid
                        x:Name="LayoutRoot"
                        Height="40"
                        Background="{TemplateBinding Background}"
                        Control.IsTemplateFocusTarget="True">

                                <VisualStateManager.VisualStateGroups>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
                                                <Setter Target="Icon.Foreground" Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="IconStates">
                                        <VisualState x:Name="IconVisible" />
                                        <VisualState x:Name="IconCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                                <Setter Target="IconColumn.Width" Value="16" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                                <Grid
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">

                                    <Rectangle
                                x:Name="SelectionIndicator"
                                Width="2"
                                Height="24"
                                Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                Opacity="0.0"/>

                                </Grid>

                                <Grid 
                            x:Name="ContentGrid"
                            Height="40" 
                            HorizontalAlignment="Left">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="48" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Viewbox x:Name="IconBox"                                
                                Margin="{ThemeResource NavigationViewItemIconBoxMargin}">
                                        <ContentPresenter 
                                    x:Name="Icon" 
                                    Foreground="{TemplateBinding Foreground}"
                                    Content="{TemplateBinding Icon}" />
                                    </Viewbox>

                                    <ContentPresenter 
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Margin="{TemplateBinding Padding}"
                                AutomationProperties.AccessibilityView="Raw"/>

                                </Grid>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavigationViewItemHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
                <Setter Property="TextWrapping" Value="NoWrap" />
            </Style>
            <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle" TargetType="ContentControl">
                <Setter Property="FontWeight" Value="SemiLight" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
                <Setter Property="Margin" Value="12,5,0,11" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>

            <Thickness x:Key="NavigationViewItemBorderThickness">0</Thickness>


        </ResourceDictionary>
    </Page.Resources>


    <Grid ScrollViewer.VerticalScrollMode="Disabled">
      

        <!--Header="{x:Bind HeaderTitle,Mode=OneWay}"-->

        <NavigationView Background="{ThemeResource AppBackground}" IsBackEnabled="False" Header="{x:Bind HeaderTitle,Mode=OneWay}" x:Name="DashBoardNavigation" SelectionChanged="DashBoardNavigation_SelectionChanged" IsBackButtonVisible="Collapsed" IsSettingsVisible="False"  IsPaneToggleButtonVisible="True" IsPaneOpen="False" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.IsVerticalRailEnabled="False"  Padding="0" ScrollViewer.HorizontalScrollMode="Disabled" >
            <NavigationView.PaneHeader>
                <TextBlock Margin="5" FontSize="19" Text="Zoho Financial"></TextBlock>
            </NavigationView.PaneHeader>
            <NavigationView.Resources>
                <!--<SolidColorBrush x:Key="NavigationViewTopPaneBackground" Color="{ThemeResource SystemAccentColorLight1}" />-->
                <!--<SolidColorBrush x:Key="NavigationViewExpandedPaneBackground" Color="{ThemeResource DashboardBg}" />-->
                <!--<acrylicbrush x:key="navigationviewexpandedpanebackground"
              backgroundsource="backdrop" tintcolor="" tintopacity=".6"/>-->

                <!--<LinearGradientBrush x:Key="NavigationViewExpandedPaneBackground" StartPoint="1,0" EndPoint="0.25,1">
                    <GradientStop Color="#faf6fc" Offset="0.40" />
                    <GradientStop Color="#e9ddfe" Offset="0.50" />
                    <GradientStop Color="#f07c8e" Offset="0.85" />
                    <GradientStop Color="#f64f52" Offset="1.0" />
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="NavigationViewDefaultPaneBackground" StartPoint="1,0" EndPoint="0.25,1">
                    <GradientStop Color="#faf6fc" Offset="0.40" />
                    <GradientStop Color="#e9ddfe" Offset="0.50" />
                    <GradientStop Color="#f07c8e" Offset="0.85" />
                    <GradientStop Color="#f64f52" Offset="1.0" />
                </LinearGradientBrush>-->
                <!--<SolidColorBrush x:Key="NavigationViewItemBackground" Color="Pink" />-->
            </NavigationView.Resources>

            <NavigationView.MenuItems >
           
                <NavigationViewItem  ScrollViewer.VerticalScrollMode="Disabled" Icon="Home" x:Name="Overview" Content="Overview" Tag="Overview" />
                <NavigationViewItem  ScrollViewer.VerticalScrollMode="Disabled" x:Name="BankAccount" Content="Account" Tag="BankAccount" >
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE825;"></FontIcon>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem  ScrollViewer.VerticalScrollMode="Disabled" x:Name="PaymentsAndTransfer"  Content="Payments and Transfer"   >
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE724;"></FontIcon>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem  ScrollViewer.VerticalScrollMode="Disabled" x:Name="Settings" Content="Settings" Tag="Settings" >
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE115;"></FontIcon>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>

            </NavigationView.MenuItems>

            <NavigationView.PaneFooter>
                <StackPanel>
                    <NavigationViewItem  Tapped="ThemeChange_Tapped"  Name="ThemeChange" Content="{x:Bind OppositeTheme,Mode=OneWay}">
                        <NavigationViewItem.Icon>
                            <FontIcon x:Name="IconImg" Glyph="{x:Bind OppositeThemeIcon}"></FontIcon>
                        </NavigationViewItem.Icon>
                    </NavigationViewItem>


                    <NavigationViewItem Tapped="Logout_Tapped"  x:Name="Logout" Content="Logout" Tag="Logout" >
                        <NavigationViewItem.Icon>
                            <FontIcon Glyph="&#xF3B1;"></FontIcon>
                        </NavigationViewItem.Icon>
                    </NavigationViewItem>
                 
                </StackPanel>
               
               

            </NavigationView.PaneFooter>


            <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{x:Bind CurrentSelectedModule,Mode=OneWay}" CornerRadius="30" />

        </NavigationView>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger
                        MinWindowWidth="900" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <!--<Setter Target="DashBoardNavigation.CompactPaneLength" Value="240"/>-->
                        <Setter Target="DashBoardNavigation.IsPaneToggleButtonVisible" Value="false"/>
                        <Setter Target="DashBoardNavigation.PaneDisplayMode" Value="Left"/>
                        <Setter Target="DashBoardNavigation.IsPaneOpen" Value="True"/>
                        <Setter Target="DashBoardNavigation.OpenPaneLength" Value="240"></Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>